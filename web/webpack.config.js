/* global __dirname */
/* generated by unstuck-webpack */

var path = require('path');
var webpack = require('webpack');
var ExtractTextPlugin = require("extract-text-webpack-plugin");
var dir_js = path.resolve(__dirname, 'app');
var dir_css = path.resolve(__dirname, 'css');
var dir_build = path.resolve(__dirname, 'dist');
var globalConfig = require("../config");
module.exports = {
    entry: {
      app : path.resolve(__dirname, 'index.js'),
      vendor : ["react","react-dom"]
    },
    output: {
        path: dir_build,
        filename: 'bundle.js'
    },
    resolve: {
       modulesDirectories: ['node_modules', dir_js]
    },
    devServer: {
        contentBase: dir_build,
        proxy: {
            "/api*" : globalConfig.server.protocol + "://" + globalConfig.server.host + ":" + globalConfig.server.port + globalConfig.server.root
        }
    }, 
    stats: {
        colors: true,
        chunkModules: false
    },
    plugins: [
        new ExtractTextPlugin("[name].css", {  allChunks: true }), 
        new webpack.optimize.CommonsChunkPlugin("vendor", "[name].js"),
        new webpack.NoErrorsPlugin()
    ],

    module: {
        loaders: [
            {
                loader: 'file?name=assets[name].[ext]',
                test: /\.png($|\?)|\.woff($|\?)|\.woff2($|\?)|\.ttf($|\?)|\.eot($|\?)|\.svg($|\?)/
            },
            {
                loader: 'babel-loader',
                test: /\.js($|\?)|\.jsx($|\?)/,
                exclude: /node_modules/,
                query : {
                    presets : ['stage-0','es2015', 'react']
                }
            },
            {
                loader: 'file?name=/[name].html',
                test: /\.html$/
            },
            {
                loader: ExtractTextPlugin.extract('style-loader', 'css-loader?sourceMap!sass-loader?sourceMap'),
                test: /\.sass$/
            }
        ]
    }

};
